from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app.db'
db = SQLAlchemy(app)

class Tasks(db.Model):
    id = db.Column(db.Integer, primary_key=True, nullable=False)
    nome = db.Column(db.String(100), nullable=False)

with app.app_context():
    db.create_all()

#Rotas de Retorno
@app.route('/Tasks', methods=['GET'])
def Retorno_Tarefas():
    tarefas = Tasks.query.all()
    if not tarefas:
        return jsonify({'message': 'Tarefa não encontrada'}), 404
    tarefas_list = [{'id': tarefa.id, 'nome': tarefa.nome} for tarefa in tarefas]
    return jsonify(tarefas_list)

@app.route('/Tasks/<int:id>', methods=['GET'])
def Retorno_Especifico(id):
    Return = Tasks.query.get(id)
    return jsonify({'id': Tasks.id, 'nome': Tasks.nome})

#Rota de Adição
@app.route('/Adicionar', methods=['POST'])
def Adicionar():
    data = request.json
    Nova_Tarefa = Tasks(
       nome = data.get('nome')
    )
    db.session.add(Nova_Tarefa)
    db.session.commit()
    return jsonify({'message': "Tarefa adicionada com sucesso"}), 201

#Rota para Atualização
@app.route('/Atualizar/<int:id>', methods=['PUT'])
def Atualizar(id):
    Atualizacao = Tasks.query.get(id)
    data = request.json
    Atualizacao.nome = data.get('nome', Atualizacao.nome)
    db.session.commit()
    return jsonify({'id': Atualizacao.id, 'nome': Atualizacao.nome}), 202


#Rota para Deletar
@app.route('/Deletar/<int:id>', methods=['DELETE'])
def Deletar(id):
    Delete = Tasks.query.get(id)
    db.session.delete(Delete)
    db.session.commit()
    return jsonify({'message': "Tarefa removida"}), 201

if __name__ == '__main__':
    app.run(debug=True)
